package com.aspire.daydreaming.core.utils;import android.content.Context;import android.graphics.Bitmap;import android.net.Uri;import android.os.Environment;import android.util.Log;import java.io.BufferedOutputStream;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import static com.avos.avoscloud.AVUser.LOG_TAG;/** * @Name: FileUtil * @Author: yeliang * @Date: 2016/8/25 */public class FileUtil {    public File getTempFile(Context context, String url) {        File file = null;        try {            String fileName = Uri.parse(url).getLastPathSegment();            file = File.createTempFile(fileName, null, context.getCacheDir());        } catch (IOException ignored) {        }        return file;    }    //判断外部存储是否可以读写    public boolean isExternalStorageWritable() {        String state = Environment.getExternalStorageState();        return Environment.MEDIA_MOUNTED.equals(state);    }    //判断外部存储是否至少可以读    public boolean isExternalStorageReadable() {        String state = Environment.getExternalStorageState();        return Environment.MEDIA_MOUNTED.equals(state) ||                Environment.MEDIA_MOUNTED_READ_ONLY.equals(state);    }    public File getAlbumStorageDir(String albumName) {// 获得用户公共的图片目录        File file = new File(Environment.getExternalStoragePublicDirectory(                Environment.DIRECTORY_PICTURES), albumName);        if (!file.mkdirs()) {            Log.e(LOG_TAG, "Directory not created");        }        return file;    }    public File getAlbumStorageDir(Context context, String albumName) {// 获得应用私有的图片目录        File file = new File(context.getExternalFilesDir(                Environment.DIRECTORY_PICTURES), albumName);        if (!file.mkdirs()) {            Log.e(LOG_TAG, "Directory not created");        }        return file;    }    /**     * 保存方法     */    public void saveBitmap(Bitmap bm, String picName) {        File f = new File("/sdcard/namecard/", picName);        if (f.exists()) {            f.delete();        }        try {            FileOutputStream out = new FileOutputStream(f);            bm.compress(Bitmap.CompressFormat.PNG, 100, out);            out.flush();            out.close();        } catch (IOException e) {// TODO Auto-generated catch block            e.printStackTrace();        }    }    /**     * 保存文件     *     * @param bm       bitmap     * @param fileName 文件名     */    public static String saveImage(Bitmap bm, String fileName) {        String s = Environment.getExternalStorageDirectory().toString();        File dirFile = new File(s + "/DD/Image/");        if (!dirFile.exists()) {            dirFile.mkdirs();        }        File myCaptureFile = new File(s + "/DD/Image/" + fileName);        BufferedOutputStream bos = null;        try {            bos = new BufferedOutputStream(                    new FileOutputStream(myCaptureFile));        } catch (FileNotFoundException e) {            e.printStackTrace();        }        bm.compress(Bitmap.CompressFormat.JPEG, 100, bos);        try {            if (bos != null) {                bos.flush();                bos.close();            }        } catch (IOException e) {            e.printStackTrace();        }        return myCaptureFile.getAbsolutePath();    }    public static File readFile(String fileName) {        String s = Environment.getExternalStorageDirectory().toString();        File file = new File(s + "/DD/Image/" + fileName);        if (!file.mkdirs()) {            Log.e(LOG_TAG, "Directory not created");            return null;        }        return file;    }}