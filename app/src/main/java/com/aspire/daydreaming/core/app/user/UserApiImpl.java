package com.aspire.daydreaming.core.app.user;import com.aspire.daydreaming.core.app.RestApi;import com.aspire.daydreaming.core.base.BaseEntity;import com.aspire.daydreaming.core.model.info.User;import com.aspire.daydreaming.core.model.info._User;import java.io.IOException;import retrofit2.Response;import rx.Observable;/** * @Name: UserApiImpl * @Author: yeliang * @Date: 2016/8/23 */public class UserApiImpl implements UserApi {    public static final String TAG = "UserApiImpl";    @Override    public Observable<_User> login(String username, String password) {        Observable.empty().subscribe();        return Observable.create(subscriber -> {            try {                Response<_User> response = RestApi.getInstance().jsonService.login(username, password).execute();                if (response.isSuccessful()) {                    subscriber.onNext(response.body());                    subscriber.onCompleted();                } else {//                    Log.i(TAG, "login: " + response.errorBody().string());                    subscriber.onError(new Throwable("用户名或密码错误"));                    subscriber.onCompleted();                }            } catch (IOException e) {                e.printStackTrace();                subscriber.onError(new Throwable("登录失败"));                subscriber.onCompleted();            }        });    }    @Override    public Observable<BaseEntity.BaseBean> createUser(User user) {        Observable.empty().subscribe();        return Observable.create(subscriber -> {            try {                Response<BaseEntity.BaseBean> response = RestApi.getInstance().jsonService//                        .createUser(user.getUsername(), user.getPassword())                        .createUser(user)                        .execute();                if (response.isSuccessful()) {                    subscriber.onNext(response.body());                    subscriber.onCompleted();                } else {//                    Log.i(TAG, "login: " + response.errorBody().string());                    subscriber.onError(new Throwable("用户名已存在"));                    subscriber.onCompleted();                }            } catch (IOException e) {                e.printStackTrace();                subscriber.onError(new Throwable("注册失败"));                subscriber.onCompleted();            }        });    }}