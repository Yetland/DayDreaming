package com.aspire.daydreaming.bundle.myActivity.adapter;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.text.TextUtils;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.aspire.daydreaming.R;import com.aspire.daydreaming.bundle.myActivity.createActivity.adapter.ImageViewAdapter;import com.aspire.daydreaming.core.model.info.ActivityInfo;import com.squareup.picasso.Picasso;import java.util.List;import butterknife.Bind;import butterknife.ButterKnife;import butterknife.OnClick;/** * @Name: MyActivityAdapter * @Author: yeliang * @Date: 2016/8/26 */public class MyActivityAdapter extends RecyclerView.Adapter<MyActivityAdapter.ActivityHolder> {    private List<ActivityInfo> mInfoList;    private OnItemClickListener mOnItemClickListener;    private OnImageItemClickListener mOnImageItemClickListener;    public MyActivityAdapter(List<ActivityInfo> infoList) {        this.mInfoList = infoList;    }    @Override    public ActivityHolder onCreateViewHolder(ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_activity_info, parent, false);        return new ActivityHolder(view);    }    @Override    public void onBindViewHolder(ActivityHolder holder, int position) {        holder.setData(mInfoList.get(position));        holder.itemView.setOnClickListener(v -> mOnItemClickListener.onItemClick(position));    }    @Override    public int getItemCount() {        return mInfoList.size();    }    public void setOnItemClickListener(OnItemClickListener onItemClickListener) {        if (onItemClickListener != null) {            mOnItemClickListener = onItemClickListener;        } else {            mOnImageItemClickListener = position -> {            };        }    }    public void setOnImageItemClickListener(OnImageItemClickListener onImageItemClickListener) {        if (onImageItemClickListener != null) {            mOnImageItemClickListener = onImageItemClickListener;        } else {            mOnImageItemClickListener = position -> {            };        }    }    public interface OnItemClickListener {        void onItemClick(int position);    }    public interface OnImageItemClickListener {        void onItemClick(int position);    }    class ActivityHolder extends RecyclerView.ViewHolder {        @Bind(R.id.iv_avatar)        ImageView mIvAvatar;        @Bind(R.id.tv_username)        TextView mTvUsername;        @Bind(R.id.tv_content)        TextView mTvContent;        @Bind(R.id.rv_image)        RecyclerView mRvImage;        @Bind(R.id.tv_create_time)        TextView mTvCreateTime;        @Bind(R.id.imageView3)        ImageView mImageView3;        @Bind(R.id.imageView2)        ImageView mImageView2;        ActivityHolder(View itemView) {            super(itemView);            ButterKnife.bind(this, itemView);        }        public void setData(ActivityInfo activityInfo) {            mTvUsername.setText(activityInfo.getCreator().getUsername());            mTvContent.setText(activityInfo.getTitle());            mTvCreateTime.setText(activityInfo.createdAt.substring(0, 10));            if (!TextUtils.isEmpty(activityInfo.getCreator().getAvatarUrl())) {                Picasso.with(itemView.getContext())                        .load(activityInfo.getCreator().getAvatarUrl())                        .resize(300, 300)                        .centerCrop()                        .placeholder(R.mipmap.huas)                        .into(mIvAvatar);            }            if (!TextUtils.isEmpty(activityInfo.url)) {                String[] urls = activityInfo.url.split(";");                ImageViewAdapter adapter = new ImageViewAdapter(urls);                GridLayoutManager manager = new GridLayoutManager(itemView.getContext(), 3);                mRvImage.setLayoutManager(manager);                mRvImage.setAdapter(adapter);                adapter.setOnItemClickListener(position -> mOnImageItemClickListener.onItemClick(position));            }        }    }    @OnClick({R.id.imageView3, R.id.imageView2})    public void onClick(View view) {        switch (view.getId()) {            case R.id.imageView3:                break;            case R.id.imageView2:                break;        }    }}