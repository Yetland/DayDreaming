package com.aspire.daydreaming.bundle.myActivity;import android.content.Intent;import android.os.Bundle;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.aspire.daydreaming.R;import com.aspire.daydreaming.bundle.myActivity.adapter.MyActivityAdapter;import com.aspire.daydreaming.bundle.myActivity.createActivity.CreateActivity;import com.aspire.daydreaming.core.base.BaseActivity;import com.aspire.daydreaming.core.base.BaseDividerItemDecoration;import com.aspire.daydreaming.core.model.info.ActivityInfo;import com.aspire.daydreaming.core.model.info.Data;import com.aspire.daydreaming.core.model.info._User;import com.aspire.daydreaming.core.utils.ConstantUtil;import com.aspire.daydreaming.core.utils.SharedPreferenceUtil;import java.util.Collections;import java.util.List;import butterknife.Bind;import butterknife.OnClick;public class MyActivity extends BaseActivity<MyActivityPresenter, MyActivityModel> implements MyActivityContract.View {    @Bind(R.id.toolbar)    Toolbar mToolbar;    @Bind(R.id.tv_title)    TextView mTvTitle;    @Bind(R.id.tv_update)    TextView mTvUpdate;    @Bind(R.id.bt_retry)    Button mBtRetry;    @Bind(R.id.tv_error_message)    TextView mTvErrorMessage;    @Bind(R.id.ll_retry)    LinearLayout mLlRetry;    @Bind(R.id.tv_loading)    TextView mTvLoading;    @Bind(R.id.ll_loading)    LinearLayout mLlLoading;    @Bind(R.id.tv_no_data)    TextView mTvNoData;    @Bind(R.id.rv_activity)    RecyclerView mRvActivity;    @Bind(R.id.srl_activity)    SwipeRefreshLayout mSrlActivity;    private boolean isLoading = true;    @Override    public int getLayoutId() {        return R.layout.activity_my;    }    @Override    protected void initView(Bundle savedInstanceState) {        mToolbar.setTitle(" ");        mTvTitle.setText("创建活动");        setSupportActionBar(mToolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        mToolbar.setNavigationOnClickListener(view -> onBackPressed());        mTvUpdate.setVisibility(View.VISIBLE);        mTvUpdate.setText("创建");        _User user = (_User) SharedPreferenceUtil.readObject(this, ConstantUtil.key.USER_INFO, ConstantUtil.fileName.USER);        if (user == null) {            Toast.makeText(this, "请登录后操作", Toast.LENGTH_SHORT).show();            finish();        }        mSrlActivity.setRefreshing(true);        mPresenter.getActivities();        mSrlActivity.setOnRefreshListener(() -> {            if (!isLoading) {                mPresenter.getActivities();            }        });    }    @Override    public void onLoading(String msg) {        isLoading = true;        mSrlActivity.setRefreshing(true);        mLlRetry.setVisibility(View.GONE);        mRvActivity.setVisibility(View.VISIBLE);    }    @Override    public void onComplete(Data<ActivityInfo> activityInfoData) {        isLoading = false;        mSrlActivity.setRefreshing(false);        mLlRetry.setVisibility(View.GONE);        mRvActivity.setVisibility(View.VISIBLE);        setupData(activityInfoData);    }    @Override    public void onError(String errorMsg) {        isLoading = false;        mSrlActivity.setRefreshing(false);        mLlRetry.setVisibility(View.VISIBLE);        mRvActivity.setVisibility(View.GONE);        mTvErrorMessage.setText(errorMsg);    }    @OnClick({R.id.bt_retry, R.id.tv_update})    public void onClick(View view) {        switch (view.getId()) {            case R.id.bt_retry:                isLoading = true;                mSrlActivity.setRefreshing(true);                mLlRetry.setVisibility(View.GONE);                mPresenter.getActivities();                break;            case R.id.tv_update:                startActivityForResult(new Intent(this, CreateActivity.class), 1);                break;        }    }    public void setupData(Data<ActivityInfo> upData) {        List<ActivityInfo> activityInfo = upData.results;        Collections.reverse(activityInfo);        LinearLayoutManager layoutManager = new LinearLayoutManager(this);        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);        mRvActivity.addItemDecoration(new BaseDividerItemDecoration(this, BaseDividerItemDecoration.VERTICAL_LIST));        mRvActivity.setLayoutManager(layoutManager);        MyActivityAdapter activityAdapter = new MyActivityAdapter(activityInfo);        mRvActivity.setAdapter(activityAdapter);        activityAdapter.setOnItemClickListener(position -> {            Toast.makeText(MyActivity.this, position + "", Toast.LENGTH_SHORT).show();        });        activityAdapter.setOnImageItemClickListener(position -> {            Toast.makeText(MyActivity.this, position + "", Toast.LENGTH_SHORT).show();        });        mRvActivity.setOnScrollListener(new RecyclerView.OnScrollListener() {            @Override            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {                int topRowVerticalPosition =                        (recyclerView == null || recyclerView.getChildCount() == 0) ? 0 : recyclerView.getChildAt(0).getTop();                mSrlActivity.setEnabled(topRowVerticalPosition >= 0);            }            @Override            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {                super.onScrollStateChanged(recyclerView, newState);            }        });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        Log.i(TAG, "onActivityResult: " + requestCode + " , result = " + resultCode);        if (resultCode == 1) {            onLoading("重新加载");            mPresenter.getActivities();        }    }}